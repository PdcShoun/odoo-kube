apiVersion: apps/v1
kind: Deployment # Create deployment
metadata:
  name: odoo # Set the name of the deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odoo # Name for odoo-service.yaml to Match 
  template:
    metadata:
      labels:
        app: odoo
    spec: # Pod config
      containers:
        - name: odoo
          image: amd64/odoo:16.0 # Docker image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8069 # Exposing the container port 5432 for PostgreSQL client connections.
          # securityContext:
          #   privileged: true
          #   runAsUser: 0
          # env:
          #   - name: HOST
          #     value: postgres.odoo
          #   - name: USER
          #     value: odoo
          #   - name: PASSWORD
          #     value: odoo
          # envFrom:
          #   - configMapRef:
          #       name: odoo-config # Using the ConfigMap postgres-secret
          volumeMounts:
            - mountPath: /etc/odoo # Path odoo.conf 
              name: odoo-config-volume # Line 49
            - mountPath: /var/lib/odoo # Path cache
              name: odoo-pv-claim
          resources:
            requests: # minimum of resource
              memory: "64Mi"
              cpu: "250m"
            # limits: # maximum of resource [Optional]
            #   memory: "128Mi"
            #   cpu: "750m"
      volumes:
        - name: odoo-pv-claim # Name for deployment to use
          persistentVolumeClaim:
            claimName: odoo-pv-claim # Match PVC name
        - configMap:
            name: odoo-config # name From odoo-configmap.yaml < set odoo.conf
          name: odoo-config-volume # name configmap
        - name: cache-volume
          emptyDir: # temporary working disk space. emptyDir volumes get deleted when a Pod gets deleted.
            sizeLimit: 500Mi
